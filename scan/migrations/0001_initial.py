# Generated by Django 5.0 on 2025-09-01 07:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('human_resource', '0001_initial'),
        ('patient', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScanCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Scan Categories',
                'db_table': 'scan_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScanEquipmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('equipment_type', models.CharField(choices=[('ecg_machine', 'ECG Machine'), ('echo_machine', 'Echo Machine'), ('xray_machine', 'X-Ray Machine'), ('ct_scanner', 'CT Scanner'), ('mri_scanner', 'MRI Scanner'), ('ultrasound', 'Ultrasound Machine'), ('eeg_machine', 'EEG Machine'), ('stress_test', 'Stress Test Equipment'), ('holter_monitor', 'Holter Monitor')], max_length=50)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100, unique=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, help_text='Room or department', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive'), ('calibration', 'Needs Calibration')], default='active', max_length=20)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('next_maintenance', models.DateField(blank=True, null=True)),
                ('last_calibration', models.DateField(blank=True, null=True)),
                ('next_calibration', models.DateField(blank=True, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_expires', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'scan_equipment',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScanSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(default='Diagnostic Imaging', max_length=200)),
                ('department_head', models.CharField(blank=True, max_length=200)),
                ('default_appointment_duration', models.IntegerField(default=30, help_text='Default duration in minutes')),
                ('advance_booking_days', models.IntegerField(default=30, help_text='How many days ahead can appointments be booked')),
                ('working_hours_start', models.TimeField(default='08:00')),
                ('working_hours_end', models.TimeField(default='17:00')),
                ('send_appointment_reminders', models.BooleanField(default=True)),
                ('reminder_hours_before', models.IntegerField(default=24)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'scan_settings',
            },
        ),
        migrations.CreateModel(
            name='ScanOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid - Scheduled'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('amount_charged', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('scan_started_at', models.DateTimeField(blank=True, null=True)),
                ('scan_completed_at', models.DateTimeField(blank=True, null=True)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('clinical_indication', models.TextField(blank=True, help_text='Why this scan was ordered')),
                ('special_instructions', models.TextField(blank=True)),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordered_scans', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_orders', to='patient.patientmodel')),
                ('payment_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_scan_payments', to=settings.AUTH_USER_MODEL)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_scans', to=settings.AUTH_USER_MODEL)),
                ('scheduled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_scans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'scan_orders',
                'ordering': ['-ordered_at'],
            },
        ),
        migrations.CreateModel(
            name='ScanAppointmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('estimated_duration', models.IntegerField(help_text='Duration in minutes')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('no_show', 'No Show'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('patient_prepared', models.BooleanField(default=False)),
                ('preparation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('technician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scan_appointments', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='scan.scanequipmentmodel')),
                ('scan_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='scan.scanordermodel')),
            ],
            options={
                'db_table': 'scan_appointments',
                'ordering': ['appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='ScanTemplateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('scan_parameters', models.JSONField(default=dict, help_text='\n        Flexible format based on scan type:\n        {\n            "preparation": [\n                "Patient should fast for 12 hours",\n                "Remove all metal objects"\n            ],\n            "procedure_steps": [\n                "Position patient supine",\n                "Apply electrodes to chest",\n                "Record 12-lead ECG"\n            ],\n            "imaging": {\n                "views": [\n                    {"name": "AP", "description": "Anterior-Posterior", "required": true},\n                    {"name": "Lateral", "description": "Lateral view", "required": true}\n                ],\n                "contrast": {"required": false, "type": "oral"},\n                "technical_factors": {\n                    "kvp": 120,\n                    "mas": 100\n                }\n            },\n            "measurements": [\n                {\n                    "name": "Heart Rate",\n                    "code": "HR",\n                    "unit": "bpm",\n                    "normal_range": {"min": 60, "max": 100},\n                    "type": "numeric"\n                }\n            ],\n            "monitoring": {\n                "duration": "24 hours",\n                "frequency": "continuous"\n            }\n        }\n        ')),
                ('expected_images', models.JSONField(default=list, help_text='\n        Expected images for this scan:\n        [\n            {"view": "AP", "description": "Chest AP view", "required": true},\n            {"view": "Lateral", "description": "Chest Lateral view", "required": true},\n            {"view": "Oblique", "description": "Optional oblique view", "required": false}\n        ]\n        ')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('estimated_duration', models.CharField(blank=True, help_text='e.g., 30 minutes, 1 hour', max_length=50)),
                ('preparation_required', models.BooleanField(default=False)),
                ('fasting_required', models.BooleanField(default=False)),
                ('equipment_required', models.TextField(blank=True, help_text='List of equipment/machines needed')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='scan.scancategorymodel')),
            ],
            options={
                'db_table': 'scan_templates',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ScanTemplateBuilderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('scan_preset', models.CharField(choices=[('basic_ecg', 'Basic ECG (12-lead)'), ('stress_ecg', 'Stress Test ECG'), ('chest_xray', 'Chest X-Ray'), ('abdominal_ultrasound', 'Abdominal Ultrasound'), ('cardiac_echo', 'Cardiac Echo'), ('brain_ct', 'Brain CT Scan'), ('basic_eeg', 'Basic EEG'), ('custom', 'Custom Parameters')], max_length=100)),
                ('custom_parameters', models.JSONField(blank=True, default=list)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('scan_type', models.CharField(default='ecg', max_length=50)),
                ('estimated_duration', models.CharField(default='30 minutes', max_length=50)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scan.scancategorymodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scan.scantemplatemodel')),
            ],
            options={
                'db_table': 'scan_template_builders',
            },
        ),
        migrations.CreateModel(
            name='ScanResultModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('findings', models.TextField(blank=True)),
                ('impression', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('reviewed', 'Reviewed')], default='pending', max_length=20)),
                ('performed_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patientmodel')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='human_resource.staffmodel')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scan.scantemplatemodel')),
            ],
        ),
        migrations.AddField(
            model_name='scanordermodel',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='scan.scantemplatemodel'),
        ),
        migrations.AddField(
            model_name='scanequipmentmodel',
            name='supported_templates',
            field=models.ManyToManyField(blank=True, related_name='equipment', to='scan.scantemplatemodel'),
        ),
        migrations.CreateModel(
            name='ScanImageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='scan_images/%Y/%m/')),
                ('view_type', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('sequence_number', models.PositiveIntegerField(default=1)),
                ('image_quality', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20)),
                ('technical_parameters', models.JSONField(blank=True, default=dict, help_text='kVp, mAs, exposure time, etc.')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('scan_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='scan.scanresultmodel')),
            ],
            options={
                'db_table': 'scan_images',
                'ordering': ['scan_result', 'sequence_number'],
                'unique_together': {('scan_result', 'sequence_number')},
            },
        ),
    ]
