# Generated by Django 5.0 on 2025-09-01 07:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConsultantModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_consultation_duration', models.IntegerField(default=20, help_text='Minutes per consultation')),
                ('max_daily_patients', models.IntegerField(default=30, help_text='Maximum patients per day')),
                ('is_available_for_consultation', models.BooleanField(default=True)),
                ('consultation_days', models.CharField(default='mon,tue,wed,thu,fri', help_text='Comma-separated: mon,tue,wed,thu,fri,sat,sun', max_length=20)),
                ('consultation_start_time', models.TimeField(default='08:00')),
                ('consultation_end_time', models.TimeField(default='16:00')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultants',
            },
        ),
        migrations.CreateModel(
            name='ConsultationBlockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'consultation_blocks',
            },
        ),
        migrations.CreateModel(
            name='ConsultationFeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_category', models.CharField(choices=[('regular', 'Regular Patient'), ('insurance', 'Insurance Patient')], default='regular', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultation_fees',
            },
        ),
        migrations.CreateModel(
            name='ConsultationPaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_due', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('insurance_coverage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('patient_portion', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('transaction_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('card', 'Card'), ('wallet', 'Wallet'), ('transfer', 'Transfer'), ('insurance', 'Insurance')], default='wallet', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('partial', 'Partially Paid'), ('paid', 'Fully Paid'), ('overpaid', 'Overpaid')], default='paid', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consultation_payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationRoomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('capacity', models.IntegerField(default=1, help_text='Number of doctors that can use this room')),
            ],
            options={
                'db_table': 'consultation_rooms',
            },
        ),
        migrations.CreateModel(
            name='ConsultationSessionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_complaint', models.TextField(help_text='Main reason for visit')),
                ('history_of_present_illness', models.TextField(blank=True)),
                ('past_medical_history', models.TextField(blank=True)),
                ('physical_examination', models.TextField(blank=True)),
                ('assessment', models.TextField(blank=True, help_text='Clinical assessment/impression')),
                ('diagnosis', models.TextField(blank=True)),
                ('treatment_plan', models.TextField(blank=True)),
                ('medications_prescribed', models.TextField(blank=True)),
                ('investigations_ordered', models.TextField(blank=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('paused', 'Paused'), ('completed', 'Completed')], default='in_progress', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consultation_sessions',
            },
        ),
        migrations.CreateModel(
            name='ConsultationSettingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_assign_queue_numbers', models.BooleanField(default=True)),
                ('max_queue_size_per_doctor', models.IntegerField(default=50)),
                ('default_consultation_duration', models.IntegerField(default=20, help_text='Minutes')),
                ('vitals_timeout_minutes', models.IntegerField(default=30, help_text='Max time for vitals')),
                ('consultation_timeout_hours', models.IntegerField(default=2, help_text='Max consultation time')),
                ('default_insurance_coverage_percent', models.IntegerField(default=70)),
                ('send_queue_notifications', models.BooleanField(default=True)),
                ('send_vitals_reminders', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultation_settings',
            },
        ),
        migrations.CreateModel(
            name='DoctorScheduleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_patients', models.IntegerField(default=20)),
                ('current_bookings', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'doctor_schedules',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='PatientQueueModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('waiting_vitals', 'Waiting for Vitals'), ('vitals_done', 'Vitals Completed - Waiting for Doctor'), ('with_doctor', 'With Doctor'), ('consultation_paused', 'Consultation Paused'), ('consultation_completed', 'Consultation Completed'), ('cancelled', 'Cancelled')], default='waiting_vitals', max_length=25)),
                ('queue_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('joined_queue_at', models.DateTimeField(auto_now_add=True)),
                ('vitals_started_at', models.DateTimeField(blank=True, null=True)),
                ('vitals_completed_at', models.DateTimeField(blank=True, null=True)),
                ('consultation_started_at', models.DateTimeField(blank=True, null=True)),
                ('consultation_ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('priority_level', models.IntegerField(default=0, help_text='0=Normal, 1=High, 2=Emergency')),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'patient_queue',
                'ordering': ['priority_level', 'joined_queue_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientVitalsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='°C', max_digits=4, null=True)),
                ('blood_pressure_systolic', models.IntegerField()),
                ('blood_pressure_diastolic', models.IntegerField()),
                ('pulse_rate', models.IntegerField(blank=True, help_text='BPM', null=True)),
                ('respiratory_rate', models.IntegerField(blank=True, help_text='per minute', null=True)),
                ('oxygen_saturation', models.IntegerField(blank=True, help_text='SpO2 %', null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='cm', max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='kg', max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('general_appearance', models.TextField(blank=True)),
                ('chief_complaint', models.TextField(blank=True, help_text='What patient is complaining of')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'patient_vitals',
            },
        ),
        migrations.CreateModel(
            name='SpecializationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('base_consultation_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'specializations',
                'ordering': ['name'],
            },
        ),
    ]
