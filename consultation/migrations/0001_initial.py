# Generated by Django 5.0 on 2025-09-28 06:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finance', '0002_initial'),
        ('human_resource', '0001_initial'),
        ('insurance', '0001_initial'),
        ('patient', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsultationBlockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'consultation_blocks',
            },
        ),
        migrations.CreateModel(
            name='ConsultationSettingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_assign_queue_numbers', models.BooleanField(default=True)),
                ('max_queue_size_per_doctor', models.IntegerField(default=50)),
                ('default_consultation_duration', models.IntegerField(default=20, help_text='Minutes')),
                ('vitals_timeout_minutes', models.IntegerField(default=30, help_text='Max time for vitals')),
                ('consultation_timeout_hours', models.IntegerField(default=2, help_text='Max consultation time')),
                ('default_insurance_coverage_percent', models.IntegerField(default=70)),
                ('send_queue_notifications', models.BooleanField(default=True)),
                ('send_vitals_reminders', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultation_settings',
            },
        ),
        migrations.CreateModel(
            name='DiagnosisOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('icd_code', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecializationGroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='allergy_profile', serialize=False, to='patient.patientmodel')),
                ('details', models.TextField(blank=True, help_text="Details of the patient's allergies.")),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultationRoomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('capacity', models.IntegerField(default=1, help_text='Number of doctors that can use this room')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='consultation.consultationblockmodel')),
            ],
            options={
                'db_table': 'consultation_rooms',
            },
        ),
        migrations.CreateModel(
            name='ConsultantModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_consultation_duration', models.IntegerField(default=20, help_text='Minutes per consultation')),
                ('max_daily_patients', models.IntegerField(default=30, help_text='Maximum patients per day')),
                ('is_available_for_consultation', models.BooleanField(default=True)),
                ('consultation_days', models.CharField(default='mon,tue,wed,thu,fri', help_text='Comma-separated: mon,tue,wed,thu,fri,sat,sun', max_length=20)),
                ('consultation_start_time', models.TimeField(default='08:00')),
                ('consultation_end_time', models.TimeField(default='16:00')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultant_profile', to='human_resource.staffmodel')),
                ('assigned_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultants', to='consultation.consultationroommodel')),
            ],
            options={
                'db_table': 'consultants',
            },
        ),
        migrations.CreateModel(
            name='PatientQueueModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('waiting_vitals', 'Waiting for Vitals'), ('vitals_done', 'Vitals Completed - Waiting for Doctor'), ('with_doctor', 'With Doctor'), ('consultation_paused', 'Consultation Paused'), ('consultation_completed', 'Consultation Completed'), ('cancelled', 'Cancelled')], default='waiting_vitals', max_length=25)),
                ('queue_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('joined_queue_at', models.DateTimeField(auto_now_add=True)),
                ('vitals_started_at', models.DateTimeField(blank=True, null=True)),
                ('vitals_completed_at', models.DateTimeField(blank=True, null=True)),
                ('consultation_started_at', models.DateTimeField(blank=True, null=True)),
                ('consultation_ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('priority_level', models.IntegerField(default=0, help_text='0=Normal, 1=High, 2=Emergency')),
                ('notes', models.TextField(blank=True)),
                ('consultant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultation.consultantmodel')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patientmodel')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.patienttransactionmodel')),
                ('vitals_nurse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vitals_queue', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patient_queue',
                'ordering': ['priority_level', 'joined_queue_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationSessionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_type', models.CharField(choices=[('new', 'New Patient'), ('follow_up', 'Follow-up Visit')], help_text='Only NEW consultations appear in OPD register', max_length=20)),
                ('assessment', models.TextField(help_text='Comprehensive consultation notes')),
                ('chief_complaint', models.TextField(help_text='Comprehensive consultation notes')),
                ('diagnosis', models.TextField(help_text='Comprehensive consultation notes')),
                ('other_diagnosis_text', models.CharField(blank=True, help_text='If diagnosis not in list above', max_length=500, null=True)),
                ('case_status', models.CharField(choices=[('ongoing', 'Ongoing Treatment'), ('completed', 'Case Completed'), ('referred', 'Referred'), ('discharged', 'Discharged')], default='ongoing', help_text="Mark as 'completed' to make next visit a NEW consultation", max_length=20)),
                ('voice_recording', models.FileField(blank=True, null=True, upload_to='consultations/')),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed')], default='in_progress', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('primary_diagnosis', models.ForeignKey(blank=True, help_text='Required for new consultations', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_consultations', to='consultation.diagnosisoption')),
                ('queue_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consultation', to='consultation.patientqueuemodel')),
            ],
        ),
        migrations.CreateModel(
            name='PatientVitalsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='°C', max_digits=4, null=True)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True)),
                ('pulse_rate', models.IntegerField(blank=True, help_text='BPM', null=True)),
                ('respiratory_rate', models.IntegerField(blank=True, help_text='per minute', null=True)),
                ('oxygen_saturation', models.IntegerField(blank=True, help_text='SpO2 %', null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='cm', max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='kg', max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('general_appearance', models.TextField(blank=True)),
                ('extra_note', models.TextField(blank=True)),
                ('chief_complaint', models.TextField(blank=True, help_text='What patient is complaining of')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('queue_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vitals', to='consultation.patientqueuemodel')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_vitals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patient_vitals',
            },
        ),
        migrations.CreateModel(
            name='SpecializationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('base_consultation_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consultation.specializationgroupmodel')),
            ],
            options={
                'db_table': 'specializations',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='patientqueuemodel',
            name='specialization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consultation.specializationmodel'),
        ),
        migrations.AddField(
            model_name='consultationroommodel',
            name='specialization',
            field=models.ForeignKey(blank=True, help_text='Primary specialization for this room', null=True, on_delete=django.db.models.deletion.SET_NULL, to='consultation.specializationmodel'),
        ),
        migrations.AddField(
            model_name='consultantmodel',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultation.specializationmodel'),
        ),
        migrations.CreateModel(
            name='DoctorScheduleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_patients', models.IntegerField(default=20)),
                ('current_bookings', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='consultation.consultantmodel')),
            ],
            options={
                'db_table': 'doctor_schedules',
                'ordering': ['date', 'start_time'],
                'unique_together': {('consultant', 'date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='consultationroommodel',
            unique_together={('name', 'block')},
        ),
        migrations.CreateModel(
            name='ConsultationFeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_category', models.CharField(choices=[('regular', 'Regular Patient'), ('insurance', 'Insurance Patient')], default='regular', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('validity_in_days', models.PositiveIntegerField(default=1, help_text='Number of days this fee is valid after being applied.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('insurance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insurance', to='insurance.hmocoverageplanmodel')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='consultation.specializationmodel')),
            ],
            options={
                'db_table': 'consultation_fees',
                'unique_together': {('specialization', 'patient_category', 'insurance')},
            },
        ),
    ]
