# Generated by Django 5.0 on 2025-09-28 06:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inpatient', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LabEquipmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('next_maintenance', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lab_equipment',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabReagentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('catalog_number', models.CharField(blank=True, max_length=100)),
                ('current_stock', models.IntegerField(default=0)),
                ('minimum_stock', models.IntegerField(default=10)),
                ('unit', models.CharField(default='pieces', max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lab_reagents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabTestCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Lab Test Categories',
                'db_table': 'lab_test_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabTestResultModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('results_data', models.JSONField(default=dict, help_text='\n        Results in same structure as template:\n        {\n            "results": [\n                {\n                    "parameter_code": "HGB",\n                    "parameter_name": "Hemoglobin", \n                    "value": "14.5",\n                    "unit": "g/dL",\n                    "normal_range": "12.0-16.0",\n                    "status": "normal"  # normal, high, low, abnormal\n                }\n            ]\n        }\n        ')),
                ('technician_comments', models.TextField(blank=True)),
                ('pathologist_comments', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lab_test_results',
                'permissions': [('can_verify_lab_result', 'Can verify lab test result')],
            },
        ),
        migrations.CreateModel(
            name='LabTestTemplateBuilderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('parameter_preset', models.CharField(choices=[('basic_chemistry', 'Basic Chemistry Panel'), ('lipid_profile', 'Lipid Profile'), ('liver_function', 'Liver Function Tests'), ('kidney_function', 'Kidney Function Tests'), ('thyroid_function', 'Thyroid Function Tests'), ('complete_blood_count', 'Complete Blood Count'), ('urinalysis', 'Urinalysis'), ('custom', 'Custom Parameters')], max_length=100)),
                ('custom_parameters', models.JSONField(blank=True, default=list)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sample_type', models.CharField(default='blood', max_length=50)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'lab_template_builders',
            },
        ),
        migrations.CreateModel(
            name='LabTestTemplateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('test_parameters', models.JSONField(default=dict, help_text='\n        Standard format:\n        {\n            "parameters": [\n                {\n                    "name": "Hemoglobin",\n                    "code": "HGB", \n                    "unit": "g/dL",\n                    "normal_range": {"min": 12.0, "max": 16.0, "gender_specific": true},\n                    "type": "numeric"\n                },\n                {\n                    "name": "Blood Group",\n                    "code": "BG",\n                    "type": "select",\n                    "options": ["A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"]\n                }\n            ]\n        }\n        ')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sample_type', models.CharField(choices=[('blood', 'Blood'), ('urine', 'Urine'), ('stool', 'Stool'), ('sputum', 'Sputum'), ('csf', 'CSF'), ('other', 'Other')], default='blood', max_length=50)),
                ('sample_volume', models.CharField(blank=True, help_text='e.g., 5ml, 10ml', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('reason_for_deactivate', models.CharField(blank=True, default='', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lab_test_templates',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LabSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_name', models.CharField(blank=True, default='', max_length=200)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('allow_direct_lab_order', models.BooleanField(default=False, help_text='Allow patients to order lab tests directly without a consultation (walk-in).')),
                ('allow_result_print_in_lab', models.BooleanField(default=True, help_text='Allow staff in the laboratory department to print test results.')),
                ('allow_result_printing_by_consultant', models.BooleanField(default=True, help_text='Allow the ordering consultant/doctor to print test results from their dashboard.')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Laboratory Settings',
            },
        ),
        migrations.CreateModel(
            name='LabTestOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending Payment'), ('paid', 'Paid - Awaiting Sample'), ('collected', 'Sample Collected'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('source', models.CharField(choices=[('doctor', 'Doctor Prescribed'), ('lab', 'Lab Direct Order')], default='lab', help_text='Source of the test order', max_length=20)),
                ('amount_charged', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_status', models.BooleanField(blank=True, default=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('sample_collected_at', models.DateTimeField(blank=True, null=True)),
                ('sample_label', models.CharField(blank=True, max_length=50)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('expected_completion', models.DateTimeField(blank=True, null=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('admission', models.ForeignKey(blank=True, help_text='Link to an admission record if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_test_orders', to='inpatient.admission')),
            ],
            options={
                'db_table': 'lab_test_orders',
                'ordering': ['-ordered_at'],
            },
        ),
    ]
