# Generated by Django 5.0 on 2025-09-28 05:57

import django.core.validators
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField()),
                ('invoice_reference', models.CharField(blank=True, max_length=200)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Expense Categories',
            },
        ),
        migrations.CreateModel(
            name='FinanceSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_funding', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('maximum_funding', models.DecimalField(decimal_places=2, default=Decimal('500000.00'), help_text='The maximum amount a patient can fund their wallet with in one transaction.', max_digits=12)),
                ('allow_negative_balance', models.BooleanField(default=False, help_text='If True, patients can have a negative wallet balance (post-paid). If False, payments will fail if balance is insufficient.')),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('receipt_number', models.CharField(blank=True, max_length=100)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='IncomeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Income Categories',
            },
        ),
        migrations.CreateModel(
            name='MoneyRemittance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remittance_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('total_cash_expected', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_transfer_expected', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('amount_remitted_cash', models.DecimalField(decimal_places=2, help_text='The actual amount of cash being handed over.', max_digits=12)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('DISCREPANCY', 'Discrepancy Noted')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Notes explaining any discrepancy or details about the remittance.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OtherPaymentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('medical_services', 'Medical Services'), ('diagnostic_services', 'Diagnostic Services'), ('documents', 'Medical Documents'), ('equipment_rental', 'Equipment Rental'), ('facility_services', 'Facility Services'), ('professional_fees', 'Professional Fees'), ('other', 'Other')], max_length=50)),
                ('default_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Default amount (can be overridden during payment)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_fixed_amount', models.BooleanField(default=False, help_text='If true, amount cannot be changed during payment')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PatientRefundModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PatientTransactionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('wallet_funding', 'WALLET FUNDING'), ('consultation_payment', 'CONSULTATION PAYMENT'), ('drug_payment', 'DRUG PAYMENT'), ('lab_payment', 'LAB PAYMENT'), ('scan_payment', 'SCAN PAYMENT'), ('admission_payment', 'ADMISSION PAYMENT'), ('surgery_payment', 'SURGERY PAYMENT'), ('service', 'SERVICE'), ('item', 'ITEM PURCHASE'), ('other_payment', 'OTHER PAYMENT'), ('drug_refund', 'DRUG REFUND'), ('lab_refund', 'LAB REFUND'), ('scan_refund', 'SCAN REFUND'), ('admission_refund', 'ADMISSION REFUND'), ('surgery_refund', 'SURGERY REFUND'), ('other_refund', 'OTHER REFUND'), ('wallet_withdrawal', 'WALLET WITHDRAWAL'), ('refund_to_wallet', 'REFUND TO WALLET'), ('wallet_correction', 'WALLET CORRECTION')], max_length=20)),
                ('transaction_direction', models.CharField(choices=[('in', 'IN'), ('out', 'OUT')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('old_balance', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('new_balance', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date', models.DateField()),
                ('transaction_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('completed', 'COMPLETED'), ('failed', 'FAILED'), ('cancelled', 'CANCELLED')], default='completed', max_length=20)),
                ('valid_till', models.DateField(blank=True, help_text='The date until which the paid service is valid (e.g., for consultations).', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalaryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField()),
                ('year', models.PositiveIntegerField()),
                ('basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('medical_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('other_allowances', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, help_text='Any additional bonus for this month.', max_digits=12)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, help_text='e.g., salary advance, loan repayment', max_digits=12)),
                ('notes', models.CharField(blank=True, help_text='Optional notes for this payslip.', max_length=255)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('pension_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, help_text='Tracks the actual amount paid.', max_digits=12)),
            ],
            options={
                'ordering': ['-year', '-month', 'staff__first_name'],
            },
        ),
        migrations.CreateModel(
            name='SalaryStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('medical_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('other_allowances', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('pension_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('effective_from', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffBankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20)),
                ('account_name', models.CharField(max_length=200)),
                ('sort_code', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WalletWithdrawalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('withdrawal_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Wallet Withdrawal Record',
                'ordering': ['-withdrawal_date'],
            },
        ),
    ]
