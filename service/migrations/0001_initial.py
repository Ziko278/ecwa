# Generated by Django 5.0 on 2025-09-28 06:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('consultation', '0001_initial'),
        ('inpatient', '0001_initial'),
        ('patient', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category_type', models.CharField(choices=[('service', 'Service/Procedure'), ('item', 'Item/Product'), ('mixed', 'Both Services and Items')], default='mixed', max_length=20)),
                ('show_as_record_column', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceItemBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Service Item Batches',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('has_results', models.BooleanField(default=False)),
                ('result_template', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='service.servicecategory')),
            ],
            options={
                'ordering': ['category__name', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('minimum_stock_level', models.IntegerField(default=5)),
                ('unit_of_measure', models.CharField(choices=[('piece', 'Piece'), ('pair', 'Pair'), ('box', 'Box'), ('bottle', 'Bottle'), ('pack', 'Pack'), ('kg', 'Kilogram')], default='piece', max_length=20)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_items', to='service.servicecategory')),
            ],
            options={
                'ordering': ['category__name', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PatientServiceTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('quantity_dispensed', models.PositiveIntegerField(default=0, help_text='How many units of the item have been given to the patient.')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending_payment', 'Pending Payment'), ('paid', 'Paid'), ('partially_dispensed', 'Partially Dispensed'), ('fully_dispensed', 'Fully Dispensed'), ('cancelled', 'Cancelled')], default='pending_payment', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admission', models.ForeignKey(blank=True, help_text='Link to an admission record if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_drug_orders', to='inpatient.admission')),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_drug_consultation_order', to='consultation.consultationsessionmodel')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patientmodel')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('surgery', models.ForeignKey(blank=True, help_text='Link to a surgery record if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_drug_orders', to='inpatient.surgery')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='service.service')),
                ('service_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='service.serviceitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceItemStockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('stock_in', 'Stock In'), ('stock_out', 'Stock Out'), ('adjustment', 'Stock Adjustment'), ('sale', 'Sale to Patient'), ('return', 'Return from Patient'), ('expired', 'Expired/Damaged')], max_length=20)),
                ('quantity', models.IntegerField(help_text='Positive for in, negative for out')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('previous_stock', models.IntegerField(help_text='Stock level before this movement')),
                ('new_stock', models.IntegerField(help_text='Stock level after this movement')),
                ('reference_type', models.CharField(blank=True, choices=[('purchase', 'Purchase Order'), ('sale', 'Patient Sale'), ('adjustment', 'Stock Adjustment'), ('sale_reversal', 'Sale Reversal'), ('expiry', 'Expiry/Damage')], max_length=20, null=True)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_entries', to='service.serviceitembatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='service.serviceitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_data', models.JSONField(help_text='The actual result data in JSON format')),
                ('result_file', models.FileField(blank=True, null=True, upload_to='service_results/')),
                ('is_abnormal', models.BooleanField(default=False)),
                ('interpretation', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='service.patientservicetransaction')),
            ],
        ),
    ]
