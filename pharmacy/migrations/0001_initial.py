# Generated by Django 5.0 on 2025-09-28 06:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('consultation', '0001_initial'),
        ('inpatient', '0001_initial'),
        ('patient', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DrugBatchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250)),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'drug_batches',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DrugCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Drug Categories',
                'db_table': 'drug_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DrugFormulationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_type', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('injection', 'Injection'), ('syrup', 'Syrup'), ('cream', 'Cream'), ('drops', 'Drops')], max_length=20)),
                ('strength', models.CharField(help_text='e.g., 500mg, 250mg/5ml', max_length=50)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'drug_formulations',
                'ordering': ['generic_drug__generic_name', 'form_type'],
            },
        ),
        migrations.CreateModel(
            name='ManufacturerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'drug_manufacturers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PharmacySettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_sale_without_prescription', models.BooleanField(default=False)),
                ('auto_transfer_threshold', models.IntegerField(default=5, help_text='Auto-suggest transfer when pharmacy stock is below this level')),
            ],
            options={
                'db_table': 'pharmacy_settings',
            },
        ),
        migrations.CreateModel(
            name='DrugImportLogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_file', models.FileField(upload_to='drug_imports/')),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('total_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='processing', max_length=20)),
                ('imported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drug_import_logs',
                'ordering': ['-import_date'],
            },
        ),
        migrations.CreateModel(
            name='DrugModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(blank=True, help_text='Commercial/Brand name', max_length=200)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100, unique=True)),
                ('store_quantity', models.FloatField(default=0, help_text='Quantity in store/warehouse')),
                ('pharmacy_quantity', models.FloatField(default=0, help_text='Quantity in pharmacy counter')),
                ('minimum_stock_level', models.IntegerField(default=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pack_size', models.PositiveIntegerField(blank=True, default=1, help_text='Number of units in a single sellable pack (e.g., 12 tablets per card).', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('formulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='pharmacy.drugformulationmodel')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='pharmacy.manufacturermodel')),
            ],
            options={
                'db_table': 'drugs',
                'ordering': ['formulation__generic_drug__generic_name', 'brand_name'],
            },
        ),
        migrations.CreateModel(
            name='DrugOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.FloatField(help_text='The total quantity of the drug ordered (e.g., 30 tablets, 1 bottle).', validators=[django.core.validators.MinValueValidator(0.01)])),
                ('quantity_paid', models.FloatField(default=0.0, help_text='The quantity of the drug actually dispensed.')),
                ('quantity_dispensed', models.FloatField(default=0.0, help_text='The quantity of the drug actually dispensed.')),
                ('dosage_instructions', models.TextField(blank=True, help_text="e.g., 'Take 1 tablet twice daily after meals for 7 days'.")),
                ('duration', models.CharField(blank=True, help_text="e.g., '7 days', 'until finished', 'PRN'.", max_length=50)),
                ('order_number', models.CharField(blank=True, help_text='Auto-generated unique order number.', max_length=20, unique=True)),
                ('ordered_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the order was placed.')),
                ('dispensed_at', models.DateTimeField(blank=True, help_text='Timestamp when the drug was dispensed.', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Dispense'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('dispensed', 'Dispensed'), ('partially_dispensed', 'Partially Dispensed'), ('cancelled', 'Cancelled'), ('returned', 'Returned')], default='pending', help_text='Current status of the drug order.', max_length=25)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes about the order or dispensing.')),
                ('admission', models.ForeignKey(blank=True, help_text='Link to an admission record if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_orders', to='inpatient.admission')),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_consultation_order', to='consultation.consultationsessionmodel')),
                ('dispensed_by', models.ForeignKey(blank=True, help_text='The user (e.g., pharmacist) who dispensed the drug.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispensed_drugs', to=settings.AUTH_USER_MODEL)),
                ('drug', models.ForeignKey(help_text='The specific drug product ordered.', on_delete=django.db.models.deletion.CASCADE, related_name='drug_orders', to='pharmacy.drugmodel')),
                ('ordered_by', models.ForeignKey(blank=True, help_text='The user (e.g., doctor, nurse) who ordered the drug.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescribed_drugs', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(help_text='The patient for whom the drug is ordered.', on_delete=django.db.models.deletion.CASCADE, related_name='drug_prescriptions', to='patient.patientmodel')),
                ('surgery', models.ForeignKey(blank=True, help_text='Link to a surgery record if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_orders', to='inpatient.surgery')),
            ],
            options={
                'verbose_name': 'Drug Order',
                'verbose_name_plural': 'Drug Orders',
                'db_table': 'drug_orders',
                'ordering': ['-ordered_at'],
            },
        ),
        migrations.CreateModel(
            name='DispenseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispensed_qty', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispensed_by', models.ForeignKey(blank=True, help_text='Pharmacist or staff who dispensed the drug.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispense_records', to='pharmacy.drugordermodel')),
            ],
            options={
                'verbose_name': 'Dispense Record',
                'verbose_name_plural': 'Dispense Records',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DrugStockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_bought', models.FloatField()),
                ('quantity_left', models.FloatField(blank=True, default=0)),
                ('unit_cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('current_worth', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('location', models.CharField(choices=[('store', 'Store/Warehouse'), ('pharmacy', 'Pharmacy Counter')], default='store', max_length=20)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, default='', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('damaged', 'Damaged')], default='active', max_length=15)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='pharmacy.drugbatchmodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_entries', to='pharmacy.drugmodel')),
            ],
            options={
                'db_table': 'drug_stocks',
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='DrugStockOutModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('reason', models.CharField(choices=[('sale', 'Sale'), ('expired', 'Expired'), ('damaged', 'Damaged/Spoilt'), ('return', 'Return to Supplier'), ('transfer', 'Transfer'), ('other', 'Other')], default='sale', max_length=20)),
                ('location_reduced_from', models.CharField(choices=[('store', 'Store'), ('pharmacy', 'Pharmacy')], help_text='Which drug location was reduced', max_length=20)),
                ('worth', models.DecimalField(blank=True, decimal_places=2, max_digits=12)),
                ('remark', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.drugmodel')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_outs', to='pharmacy.drugstockmodel')),
            ],
            options={
                'db_table': 'drug_stock_outs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DrugTemplateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Template name (e.g., 'Paracetamol Variants')", max_length=200)),
                ('generic_name', models.CharField(max_length=200)),
                ('is_prescription', models.BooleanField(default=True)),
                ('drug_combinations', models.JSONField(default=list, help_text='\n        Array of specific combinations like:\n        [\n            {"strength": "500mg", "form": "tablet", "manufacturer": "GSK"},\n            {"strength": "250mg", "form": "syrup", "manufacturer": "Emzor"},\n            {"strength": "500mg", "form": "tablet", "manufacturer": "Bond"}\n        ]\n        ')),
                ('is_processed', models.BooleanField(default=False, help_text='Has this template been used to create drugs?')),
                ('drugs_created_count', models.IntegerField(default=0, help_text='Number of drug variants created')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.drugcategorymodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drug_templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DrugTransferModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('transferred_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='pharmacy.drugmodel')),
                ('transferred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drug_transfers',
                'ordering': ['-transferred_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(help_text='Name of the prescribed drug not in inventory.', max_length=255)),
                ('dosage_instructions', models.TextField(blank=True)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('quantity', models.CharField(help_text="Manually entered quantity (e.g., '1 Bottle', '2 Packs').", max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_prescriptions', to='inpatient.admission')),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_prescriptions', to='consultation.consultationsessionmodel')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescribed_external_drugs', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_prescriptions', to='patient.patientmodel')),
                ('surgery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_prescriptions', to='inpatient.surgery')),
            ],
            options={
                'verbose_name': 'External Prescription',
                'verbose_name_plural': 'External Prescriptions',
                'db_table': 'external_prescriptions',
                'ordering': ['-ordered_at'],
            },
        ),
        migrations.CreateModel(
            name='GenericDrugModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generic_name', models.CharField(help_text='WHO/INN generic name', max_length=200, unique=True)),
                ('atc_code', models.CharField(blank=True, help_text='WHO ATC code (e.g., N02BE01 for Paracetamol)', max_length=10)),
                ('is_prescription_only', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generic_drugs', to='pharmacy.drugcategorymodel')),
            ],
            options={
                'db_table': 'generic_drugs',
                'ordering': ['generic_name'],
            },
        ),
        migrations.AddField(
            model_name='drugformulationmodel',
            name='generic_drug',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulations', to='pharmacy.genericdrugmodel'),
        ),
        migrations.AlterUniqueTogether(
            name='drugformulationmodel',
            unique_together={('generic_drug', 'form_type', 'strength')},
        ),
    ]
